// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventIDReq struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Slug                 string   `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventIDReq) Reset()         { *m = EventIDReq{} }
func (m *EventIDReq) String() string { return proto.CompactTextString(m) }
func (*EventIDReq) ProtoMessage()    {}
func (*EventIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *EventIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventIDReq.Unmarshal(m, b)
}
func (m *EventIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventIDReq.Marshal(b, m, deterministic)
}
func (m *EventIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventIDReq.Merge(m, src)
}
func (m *EventIDReq) XXX_Size() int {
	return xxx_messageInfo_EventIDReq.Size(m)
}
func (m *EventIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventIDReq proto.InternalMessageInfo

func (m *EventIDReq) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *EventIDReq) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

type EventRes struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Slug                 string   `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Place                string   `protobuf:"bytes,6,opt,name=place,proto3" json:"place,omitempty"`
	ScheduledAt          string   `protobuf:"bytes,7,opt,name=scheduledAt,proto3" json:"scheduledAt,omitempty"`
	Timezone             string   `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventRes) Reset()         { *m = EventRes{} }
func (m *EventRes) String() string { return proto.CompactTextString(m) }
func (*EventRes) ProtoMessage()    {}
func (*EventRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *EventRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRes.Unmarshal(m, b)
}
func (m *EventRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRes.Marshal(b, m, deterministic)
}
func (m *EventRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRes.Merge(m, src)
}
func (m *EventRes) XXX_Size() int {
	return xxx_messageInfo_EventRes.Size(m)
}
func (m *EventRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRes.DiscardUnknown(m)
}

var xxx_messageInfo_EventRes proto.InternalMessageInfo

func (m *EventRes) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *EventRes) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *EventRes) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EventRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *EventRes) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *EventRes) GetScheduledAt() string {
	if m != nil {
		return m.ScheduledAt
	}
	return ""
}

func (m *EventRes) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

type IndexEventsRes struct {
	Api                  string      `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Events               []*EventRes `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IndexEventsRes) Reset()         { *m = IndexEventsRes{} }
func (m *IndexEventsRes) String() string { return proto.CompactTextString(m) }
func (*IndexEventsRes) ProtoMessage()    {}
func (*IndexEventsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *IndexEventsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexEventsRes.Unmarshal(m, b)
}
func (m *IndexEventsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexEventsRes.Marshal(b, m, deterministic)
}
func (m *IndexEventsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexEventsRes.Merge(m, src)
}
func (m *IndexEventsRes) XXX_Size() int {
	return xxx_messageInfo_IndexEventsRes.Size(m)
}
func (m *IndexEventsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexEventsRes.DiscardUnknown(m)
}

var xxx_messageInfo_IndexEventsRes proto.InternalMessageInfo

func (m *IndexEventsRes) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *IndexEventsRes) GetEvents() []*EventRes {
	if m != nil {
		return m.Events
	}
	return nil
}

type TicketSummaryListRes struct {
	Api                  string              `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	List                 []*TicketSummaryRes `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TicketSummaryListRes) Reset()         { *m = TicketSummaryListRes{} }
func (m *TicketSummaryListRes) String() string { return proto.CompactTextString(m) }
func (*TicketSummaryListRes) ProtoMessage()    {}
func (*TicketSummaryListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *TicketSummaryListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketSummaryListRes.Unmarshal(m, b)
}
func (m *TicketSummaryListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketSummaryListRes.Marshal(b, m, deterministic)
}
func (m *TicketSummaryListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketSummaryListRes.Merge(m, src)
}
func (m *TicketSummaryListRes) XXX_Size() int {
	return xxx_messageInfo_TicketSummaryListRes.Size(m)
}
func (m *TicketSummaryListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketSummaryListRes.DiscardUnknown(m)
}

var xxx_messageInfo_TicketSummaryListRes proto.InternalMessageInfo

func (m *TicketSummaryListRes) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *TicketSummaryListRes) GetList() []*TicketSummaryRes {
	if m != nil {
		return m.List
	}
	return nil
}

type TicketSummaryRes struct {
	Api       string  `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EventSlug string  `protobuf:"bytes,3,opt,name=eventSlug,proto3" json:"eventSlug,omitempty"`
	Type      string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Qty       int32   `protobuf:"varint,5,opt,name=qty,proto3" json:"qty,omitempty"`
	Price     float32 `protobuf:"fixed32,6,opt,name=price,proto3" json:"price,omitempty"`
	Currency  string  `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	//repeated Price prices = 8;
	Prices               map[string]float32 `protobuf:"bytes,8,rep,name=prices,proto3" json:"prices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TicketSummaryRes) Reset()         { *m = TicketSummaryRes{} }
func (m *TicketSummaryRes) String() string { return proto.CompactTextString(m) }
func (*TicketSummaryRes) ProtoMessage()    {}
func (*TicketSummaryRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *TicketSummaryRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketSummaryRes.Unmarshal(m, b)
}
func (m *TicketSummaryRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketSummaryRes.Marshal(b, m, deterministic)
}
func (m *TicketSummaryRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketSummaryRes.Merge(m, src)
}
func (m *TicketSummaryRes) XXX_Size() int {
	return xxx_messageInfo_TicketSummaryRes.Size(m)
}
func (m *TicketSummaryRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketSummaryRes.DiscardUnknown(m)
}

var xxx_messageInfo_TicketSummaryRes proto.InternalMessageInfo

func (m *TicketSummaryRes) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *TicketSummaryRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TicketSummaryRes) GetEventSlug() string {
	if m != nil {
		return m.EventSlug
	}
	return ""
}

func (m *TicketSummaryRes) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TicketSummaryRes) GetQty() int32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *TicketSummaryRes) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TicketSummaryRes) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TicketSummaryRes) GetPrices() map[string]float32 {
	if m != nil {
		return m.Prices
	}
	return nil
}

type Price struct {
	Currency             string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Value                float32  `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Price) Reset()         { *m = Price{} }
func (m *Price) String() string { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()    {}
func (*Price) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *Price) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Price.Unmarshal(m, b)
}
func (m *Price) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Price.Marshal(b, m, deterministic)
}
func (m *Price) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Price.Merge(m, src)
}
func (m *Price) XXX_Size() int {
	return xxx_messageInfo_Price.Size(m)
}
func (m *Price) XXX_DiscardUnknown() {
	xxx_messageInfo_Price.DiscardUnknown(m)
}

var xxx_messageInfo_Price proto.InternalMessageInfo

func (m *Price) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Price) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type PreBookReq struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	UserSlug             string   `protobuf:"bytes,2,opt,name=userSlug,proto3" json:"userSlug,omitempty"`
	EventSlug            string   `protobuf:"bytes,3,opt,name=eventSlug,proto3" json:"eventSlug,omitempty"`
	TicketType           string   `protobuf:"bytes,4,opt,name=ticketType,proto3" json:"ticketType,omitempty"`
	Qty                  int32    `protobuf:"varint,5,opt,name=qty,proto3" json:"qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreBookReq) Reset()         { *m = PreBookReq{} }
func (m *PreBookReq) String() string { return proto.CompactTextString(m) }
func (*PreBookReq) ProtoMessage()    {}
func (*PreBookReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *PreBookReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreBookReq.Unmarshal(m, b)
}
func (m *PreBookReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreBookReq.Marshal(b, m, deterministic)
}
func (m *PreBookReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreBookReq.Merge(m, src)
}
func (m *PreBookReq) XXX_Size() int {
	return xxx_messageInfo_PreBookReq.Size(m)
}
func (m *PreBookReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PreBookReq.DiscardUnknown(m)
}

var xxx_messageInfo_PreBookReq proto.InternalMessageInfo

func (m *PreBookReq) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *PreBookReq) GetUserSlug() string {
	if m != nil {
		return m.UserSlug
	}
	return ""
}

func (m *PreBookReq) GetEventSlug() string {
	if m != nil {
		return m.EventSlug
	}
	return ""
}

func (m *PreBookReq) GetTicketType() string {
	if m != nil {
		return m.TicketType
	}
	return ""
}

func (m *PreBookReq) GetQty() int32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

type TicketOpRes struct {
	Api                  string       `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	List                 []*TicketRes `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Total                float32      `protobuf:"fixed32,3,opt,name=total,proto3" json:"total,omitempty"`
	Currency             string       `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	ReservationID        string       `protobuf:"bytes,5,opt,name=reservationID,proto3" json:"reservationID,omitempty"`
	Status               string       `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TicketOpRes) Reset()         { *m = TicketOpRes{} }
func (m *TicketOpRes) String() string { return proto.CompactTextString(m) }
func (*TicketOpRes) ProtoMessage()    {}
func (*TicketOpRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *TicketOpRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketOpRes.Unmarshal(m, b)
}
func (m *TicketOpRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketOpRes.Marshal(b, m, deterministic)
}
func (m *TicketOpRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketOpRes.Merge(m, src)
}
func (m *TicketOpRes) XXX_Size() int {
	return xxx_messageInfo_TicketOpRes.Size(m)
}
func (m *TicketOpRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketOpRes.DiscardUnknown(m)
}

var xxx_messageInfo_TicketOpRes proto.InternalMessageInfo

func (m *TicketOpRes) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *TicketOpRes) GetList() []*TicketRes {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *TicketOpRes) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TicketOpRes) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TicketOpRes) GetReservationID() string {
	if m != nil {
		return m.ReservationID
	}
	return ""
}

func (m *TicketOpRes) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type TicketRes struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EventSlug            string   `protobuf:"bytes,3,opt,name=eventSlug,proto3" json:"eventSlug,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Serie                string   `protobuf:"bytes,5,opt,name=serie,proto3" json:"serie,omitempty"`
	Number               int32    `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	Seat                 string   `protobuf:"bytes,7,opt,name=seat,proto3" json:"seat,omitempty"`
	Price                int32    `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	Currency             string   `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	ReservationID        string   `protobuf:"bytes,10,opt,name=reservationID,proto3" json:"reservationID,omitempty"`
	Status               string   `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	LocalOrderID         string   `protobuf:"bytes,12,opt,name=localOrderID,proto3" json:"localOrderID,omitempty"`
	GatewayOpID          string   `protobuf:"bytes,13,opt,name=gatewayOpID,proto3" json:"gatewayOpID,omitempty"`
	GatewayOpStatus      string   `protobuf:"bytes,14,opt,name=gatewayOpStatus,proto3" json:"gatewayOpStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketRes) Reset()         { *m = TicketRes{} }
func (m *TicketRes) String() string { return proto.CompactTextString(m) }
func (*TicketRes) ProtoMessage()    {}
func (*TicketRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *TicketRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketRes.Unmarshal(m, b)
}
func (m *TicketRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketRes.Marshal(b, m, deterministic)
}
func (m *TicketRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketRes.Merge(m, src)
}
func (m *TicketRes) XXX_Size() int {
	return xxx_messageInfo_TicketRes.Size(m)
}
func (m *TicketRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketRes.DiscardUnknown(m)
}

var xxx_messageInfo_TicketRes proto.InternalMessageInfo

func (m *TicketRes) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *TicketRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TicketRes) GetEventSlug() string {
	if m != nil {
		return m.EventSlug
	}
	return ""
}

func (m *TicketRes) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TicketRes) GetSerie() string {
	if m != nil {
		return m.Serie
	}
	return ""
}

func (m *TicketRes) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *TicketRes) GetSeat() string {
	if m != nil {
		return m.Seat
	}
	return ""
}

func (m *TicketRes) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TicketRes) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TicketRes) GetReservationID() string {
	if m != nil {
		return m.ReservationID
	}
	return ""
}

func (m *TicketRes) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TicketRes) GetLocalOrderID() string {
	if m != nil {
		return m.LocalOrderID
	}
	return ""
}

func (m *TicketRes) GetGatewayOpID() string {
	if m != nil {
		return m.GatewayOpID
	}
	return ""
}

func (m *TicketRes) GetGatewayOpStatus() string {
	if m != nil {
		return m.GatewayOpStatus
	}
	return ""
}

type ConfirmBookingReq struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	UserSlug             string   `protobuf:"bytes,2,opt,name=userSlug,proto3" json:"userSlug,omitempty"`
	EventSlug            string   `protobuf:"bytes,3,opt,name=eventSlug,proto3" json:"eventSlug,omitempty"`
	ReservationID        string   `protobuf:"bytes,4,opt,name=reservationID,proto3" json:"reservationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmBookingReq) Reset()         { *m = ConfirmBookingReq{} }
func (m *ConfirmBookingReq) String() string { return proto.CompactTextString(m) }
func (*ConfirmBookingReq) ProtoMessage()    {}
func (*ConfirmBookingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *ConfirmBookingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmBookingReq.Unmarshal(m, b)
}
func (m *ConfirmBookingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmBookingReq.Marshal(b, m, deterministic)
}
func (m *ConfirmBookingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmBookingReq.Merge(m, src)
}
func (m *ConfirmBookingReq) XXX_Size() int {
	return xxx_messageInfo_ConfirmBookingReq.Size(m)
}
func (m *ConfirmBookingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmBookingReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmBookingReq proto.InternalMessageInfo

func (m *ConfirmBookingReq) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ConfirmBookingReq) GetUserSlug() string {
	if m != nil {
		return m.UserSlug
	}
	return ""
}

func (m *ConfirmBookingReq) GetEventSlug() string {
	if m != nil {
		return m.EventSlug
	}
	return ""
}

func (m *ConfirmBookingReq) GetReservationID() string {
	if m != nil {
		return m.ReservationID
	}
	return ""
}

func init() {
	proto.RegisterType((*EventIDReq)(nil), "v1.EventIDReq")
	proto.RegisterType((*EventRes)(nil), "v1.EventRes")
	proto.RegisterType((*IndexEventsRes)(nil), "v1.IndexEventsRes")
	proto.RegisterType((*TicketSummaryListRes)(nil), "v1.TicketSummaryListRes")
	proto.RegisterType((*TicketSummaryRes)(nil), "v1.TicketSummaryRes")
	proto.RegisterMapType((map[string]float32)(nil), "v1.TicketSummaryRes.PricesEntry")
	proto.RegisterType((*Price)(nil), "v1.Price")
	proto.RegisterType((*PreBookReq)(nil), "v1.PreBookReq")
	proto.RegisterType((*TicketOpRes)(nil), "v1.TicketOpRes")
	proto.RegisterType((*TicketRes)(nil), "v1.TicketRes")
	proto.RegisterType((*ConfirmBookingReq)(nil), "v1.ConfirmBookingReq")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 700 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4d, 0x6e, 0xdb, 0x4a,
	0x0c, 0x8e, 0xe4, 0x9f, 0xd8, 0x74, 0xe2, 0xe4, 0x0d, 0xfc, 0x1e, 0x04, 0xe3, 0xe1, 0xc1, 0x6f,
	0x90, 0x85, 0x17, 0x85, 0x81, 0x24, 0x9b, 0x24, 0xab, 0xfe, 0x38, 0x40, 0x0d, 0x14, 0x48, 0x20,
	0xe7, 0x02, 0x8a, 0xcc, 0xa6, 0x82, 0x65, 0x49, 0x19, 0x8d, 0xdc, 0xaa, 0xfb, 0x6c, 0x7a, 0x8d,
	0xde, 0xa0, 0x07, 0xe9, 0x45, 0x7a, 0x89, 0x62, 0x38, 0x8a, 0x7e, 0x6c, 0xb5, 0xe9, 0xa2, 0xdd,
	0xf1, 0xfb, 0x48, 0xca, 0xe4, 0x37, 0x24, 0x0d, 0x5d, 0x27, 0xf2, 0x26, 0x91, 0x08, 0x65, 0xc8,
	0xcc, 0xf5, 0x31, 0x3f, 0x01, 0xb8, 0x5c, 0x63, 0x20, 0x67, 0x53, 0x1b, 0xef, 0xd9, 0x21, 0x34,
	0x9c, 0xc8, 0xb3, 0x8c, 0x91, 0x31, 0xee, 0xda, 0xca, 0x64, 0x0c, 0x9a, 0xb1, 0x9f, 0xdc, 0x59,
	0x26, 0x51, 0x64, 0xf3, 0xaf, 0x06, 0x74, 0x28, 0xc9, 0xc6, 0xf8, 0xd7, 0x52, 0x14, 0x27, 0xd3,
	0x08, 0xad, 0x86, 0xe6, 0x94, 0xad, 0xb8, 0xc0, 0x59, 0xa1, 0xd5, 0xd4, 0x9c, 0xb2, 0xd9, 0x08,
	0x7a, 0x0b, 0x8c, 0x5d, 0xe1, 0x45, 0xd2, 0x0b, 0x03, 0xab, 0x45, 0xae, 0x32, 0xc5, 0x06, 0xd0,
	0x8a, 0x7c, 0xc7, 0x45, 0xab, 0x4d, 0x3e, 0x0d, 0x54, 0x5e, 0xec, 0xbe, 0xc3, 0x45, 0xe2, 0xe3,
	0xe2, 0x85, 0xb4, 0x76, 0x75, 0x5e, 0x89, 0x62, 0x43, 0xe8, 0x48, 0x6f, 0x85, 0x1f, 0xc3, 0x00,
	0xad, 0x0e, 0xb9, 0x73, 0xcc, 0x5f, 0x43, 0x7f, 0x16, 0x2c, 0xf0, 0x03, 0x35, 0x15, 0xd7, 0x77,
	0x75, 0x04, 0x6d, 0x24, 0xb7, 0x65, 0x8e, 0x1a, 0xe3, 0xde, 0xc9, 0xde, 0x64, 0x7d, 0x3c, 0x79,
	0x54, 0xc1, 0xce, 0x7c, 0xdc, 0x86, 0xc1, 0x8d, 0xe7, 0x2e, 0x51, 0xce, 0x93, 0xd5, 0xca, 0x11,
	0xe9, 0x1b, 0x2f, 0xfe, 0x81, 0x4a, 0x63, 0x68, 0xfa, 0x5e, 0x2c, 0xb3, 0xaf, 0x0d, 0xd4, 0xd7,
	0x2a, 0x99, 0xea, 0xab, 0x14, 0xc1, 0x3f, 0x9b, 0x70, 0xb8, 0xe9, 0xaa, 0x97, 0x9d, 0xe4, 0x34,
	0x4b, 0x72, 0xfe, 0x0b, 0x5d, 0x2a, 0x6c, 0xae, 0xde, 0x43, 0x6b, 0x5f, 0x10, 0xf9, 0xa3, 0x34,
	0x4b, 0x8f, 0x72, 0x08, 0x8d, 0x7b, 0x99, 0x92, 0xf0, 0x2d, 0x5b, 0x99, 0x24, 0xb8, 0xf0, 0x32,
	0xc1, 0x4d, 0x5b, 0x03, 0x25, 0xa7, 0x9b, 0x08, 0x81, 0x81, 0x9b, 0x66, 0x6a, 0xe7, 0x98, 0x9d,
	0x41, 0x9b, 0x82, 0x62, 0xab, 0x43, 0xcd, 0x8d, 0xea, 0x9a, 0x9b, 0x5c, 0x53, 0xc8, 0x65, 0x20,
	0x45, 0x6a, 0x67, 0xf1, 0xc3, 0x73, 0xe8, 0x95, 0x68, 0x55, 0xcc, 0x12, 0xd3, 0xc7, 0x26, 0x97,
	0x48, 0xc5, 0xac, 0x1d, 0x3f, 0xd1, 0x5d, 0x9a, 0xb6, 0x06, 0x17, 0xe6, 0x99, 0xc1, 0xcf, 0xa1,
	0x75, 0xbd, 0x55, 0x99, 0xb1, 0x51, 0x59, 0x6d, 0x3a, 0xff, 0x64, 0x00, 0x5c, 0x0b, 0x7c, 0x19,
	0x86, 0xcb, 0xfa, 0x25, 0x18, 0x42, 0x27, 0x89, 0x51, 0xcc, 0x8b, 0xa9, 0xce, 0xf1, 0x13, 0x12,
	0xff, 0x07, 0x20, 0xa9, 0xf1, 0x9b, 0x42, 0xe8, 0x12, 0xb3, 0x2d, 0x37, 0xff, 0x62, 0x40, 0x4f,
	0x6b, 0x75, 0x15, 0xd5, 0x3f, 0xf4, 0xff, 0x95, 0xc9, 0xd9, 0x2f, 0xc4, 0xcd, 0x47, 0x46, 0xf5,
	0x29, 0x43, 0xe9, 0xf8, 0x54, 0x90, 0x69, 0x6b, 0x50, 0x51, 0xa6, 0xb9, 0xa1, 0xcc, 0x11, 0xec,
	0x0b, 0x8c, 0x51, 0xac, 0x1d, 0xb5, 0x65, 0xb3, 0x69, 0xb6, 0x7a, 0x55, 0x92, 0xfd, 0x03, 0xed,
	0x58, 0x3a, 0x32, 0x89, 0xb3, 0xed, 0xcb, 0x10, 0x7f, 0x68, 0x40, 0x37, 0xaf, 0xe1, 0x8f, 0xcd,
	0xe6, 0x00, 0x5a, 0x31, 0x0a, 0x0f, 0xb3, 0xda, 0x34, 0x50, 0x35, 0x05, 0xc9, 0xea, 0x16, 0x05,
	0xd5, 0xd4, 0xb2, 0x33, 0x44, 0x67, 0x08, 0x9d, 0xc7, 0x5b, 0x40, 0x76, 0x31, 0xcb, 0x1d, 0x0a,
	0xad, 0x99, 0xe5, 0xee, 0x53, 0xba, 0xc0, 0xcf, 0x75, 0xe9, 0x95, 0x75, 0x61, 0x1c, 0xf6, 0xfc,
	0xd0, 0x75, 0xfc, 0x2b, 0xb1, 0x40, 0x31, 0x9b, 0x5a, 0x7b, 0xe4, 0xad, 0x70, 0xea, 0x74, 0xdd,
	0x39, 0x12, 0xdf, 0x3b, 0xe9, 0x55, 0x34, 0x9b, 0x5a, 0xfb, 0xfa, 0x74, 0x95, 0x28, 0x36, 0x86,
	0x83, 0x1c, 0xce, 0xf5, 0xcf, 0xf4, 0x29, 0x6a, 0x93, 0xe6, 0x0f, 0x06, 0xfc, 0xf5, 0x2a, 0x0c,
	0xde, 0x7a, 0x62, 0xa5, 0xa6, 0xd9, 0x0b, 0xee, 0x7e, 0xf7, 0x40, 0x6f, 0xe9, 0xd1, 0xac, 0xd1,
	0xe3, 0xe4, 0x9b, 0x01, 0x1d, 0x3d, 0x0f, 0x28, 0xd8, 0x29, 0xf4, 0x4a, 0xd7, 0x95, 0xf5, 0xf3,
	0xc3, 0x49, 0xff, 0x39, 0x43, 0xa6, 0x70, 0xf5, 0xfc, 0xf2, 0x1d, 0xf6, 0x1c, 0x18, 0xc1, 0xca,
	0xd9, 0xd8, 0xca, 0xb5, 0xb6, 0x2e, 0x4b, 0x76, 0x70, 0xf9, 0x0e, 0x7b, 0x06, 0xbb, 0xd9, 0x52,
	0xeb, 0xb4, 0x62, 0xc3, 0x87, 0x07, 0x45, 0x1a, 0x2d, 0x19, 0xdf, 0x61, 0x17, 0xd0, 0xaf, 0x0a,
	0xc7, 0xfe, 0x56, 0x41, 0x5b, 0x62, 0xd6, 0xe4, 0xde, 0xb6, 0xe9, 0xef, 0xf4, 0xf4, 0x7b, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xe0, 0x6e, 0x55, 0x08, 0x5b, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TicketerClient is the client API for Ticketer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketerClient interface {
	IndexEvents(ctx context.Context, in *EventIDReq, opts ...grpc.CallOption) (*IndexEventsRes, error)
	EventTicketSummary(ctx context.Context, in *EventIDReq, opts ...grpc.CallOption) (*TicketSummaryListRes, error)
	PreBook(ctx context.Context, in *PreBookReq, opts ...grpc.CallOption) (*TicketOpRes, error)
	ConfirmBooking(ctx context.Context, in *ConfirmBookingReq, opts ...grpc.CallOption) (*TicketOpRes, error)
}

type ticketerClient struct {
	cc *grpc.ClientConn
}

func NewTicketerClient(cc *grpc.ClientConn) TicketerClient {
	return &ticketerClient{cc}
}

func (c *ticketerClient) IndexEvents(ctx context.Context, in *EventIDReq, opts ...grpc.CallOption) (*IndexEventsRes, error) {
	out := new(IndexEventsRes)
	err := c.cc.Invoke(ctx, "/v1.Ticketer/IndexEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketerClient) EventTicketSummary(ctx context.Context, in *EventIDReq, opts ...grpc.CallOption) (*TicketSummaryListRes, error) {
	out := new(TicketSummaryListRes)
	err := c.cc.Invoke(ctx, "/v1.Ticketer/EventTicketSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketerClient) PreBook(ctx context.Context, in *PreBookReq, opts ...grpc.CallOption) (*TicketOpRes, error) {
	out := new(TicketOpRes)
	err := c.cc.Invoke(ctx, "/v1.Ticketer/PreBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketerClient) ConfirmBooking(ctx context.Context, in *ConfirmBookingReq, opts ...grpc.CallOption) (*TicketOpRes, error) {
	out := new(TicketOpRes)
	err := c.cc.Invoke(ctx, "/v1.Ticketer/ConfirmBooking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketerServer is the server API for Ticketer service.
type TicketerServer interface {
	IndexEvents(context.Context, *EventIDReq) (*IndexEventsRes, error)
	EventTicketSummary(context.Context, *EventIDReq) (*TicketSummaryListRes, error)
	PreBook(context.Context, *PreBookReq) (*TicketOpRes, error)
	ConfirmBooking(context.Context, *ConfirmBookingReq) (*TicketOpRes, error)
}

// UnimplementedTicketerServer can be embedded to have forward compatible implementations.
type UnimplementedTicketerServer struct {
}

func (*UnimplementedTicketerServer) IndexEvents(ctx context.Context, req *EventIDReq) (*IndexEventsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IndexEvents not implemented")
}
func (*UnimplementedTicketerServer) EventTicketSummary(ctx context.Context, req *EventIDReq) (*TicketSummaryListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventTicketSummary not implemented")
}
func (*UnimplementedTicketerServer) PreBook(ctx context.Context, req *PreBookReq) (*TicketOpRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreBook not implemented")
}
func (*UnimplementedTicketerServer) ConfirmBooking(ctx context.Context, req *ConfirmBookingReq) (*TicketOpRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmBooking not implemented")
}

func RegisterTicketerServer(s *grpc.Server, srv TicketerServer) {
	s.RegisterService(&_Ticketer_serviceDesc, srv)
}

func _Ticketer_IndexEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketerServer).IndexEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.Ticketer/IndexEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketerServer).IndexEvents(ctx, req.(*EventIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ticketer_EventTicketSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketerServer).EventTicketSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.Ticketer/EventTicketSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketerServer).EventTicketSummary(ctx, req.(*EventIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ticketer_PreBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreBookReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketerServer).PreBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.Ticketer/PreBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketerServer).PreBook(ctx, req.(*PreBookReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ticketer_ConfirmBooking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmBookingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketerServer).ConfirmBooking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.Ticketer/ConfirmBooking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketerServer).ConfirmBooking(ctx, req.(*ConfirmBookingReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ticketer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.Ticketer",
	HandlerType: (*TicketerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IndexEvents",
			Handler:    _Ticketer_IndexEvents_Handler,
		},
		{
			MethodName: "EventTicketSummary",
			Handler:    _Ticketer_EventTicketSummary_Handler,
		},
		{
			MethodName: "PreBook",
			Handler:    _Ticketer_PreBook_Handler,
		},
		{
			MethodName: "ConfirmBooking",
			Handler:    _Ticketer_ConfirmBooking_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
